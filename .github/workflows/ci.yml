---
name: CI

on:
  pull_request:
    branches:
      - master
  schedule:
    - cron: '23 12 21 * *'

permissions:
  contents: read

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Copy linter settings
        run: |
          mkdir .github/linters
          if [ -f .dockerfilelintrc ];  then cp .dockerfilelintrc .github/linters ; fi
          if [ -f .htmlhintrc ];        then cp .htmlhintrc .github/linters ; fi
          if [ -f .markdown-lint.yml ]; then cp .markdown-lint.yml .github/linters ; fi

      - name: Run Super-Linter
        uses: github/super-linter/slim@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_GITHUB_ACTIONS: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_NATURAL_LANGUAGE: false
          VALIDATE_JSCPD: false

  pytest:
    name: PyTest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-bugbear flake8-docstrings flake8-pylint pytest pytest-custom-exit-code
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi

      - name: Lint with flake8
        run: |
          yamllint .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest --suppress-no-test-exit-code

  analyze:
    needs:
      - lint
      - pytest

    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language:
          - 'python'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  dependency-review:
    needs:
      - lint
      - pytest

    name: Dependency Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v2
        with:
          fail-on-severity: high
          deny-licenses: AGPL-1.0-or-later
